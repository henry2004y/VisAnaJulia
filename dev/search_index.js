var documenterSearchIndex = {"docs":
[{"location":"man/guide/#Guide-1","page":"Guide","title":"Guide","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The VTK files does not have timestep information. To allow for further time series processing in Paraview, a script create_pvd.jl is provided for generating the pvd container.","category":"page"},{"location":"man/guide/#Tricks-1","page":"Guide","title":"Tricks","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"This is the first time I use Julia for reading general ascii/binary files. It was a pain at first due to the lack of examples and documents using any basic function like read/read!, but fortunately I figured them out myself. One trick in reading binary array data is the usage of view, or subarrays, in Julia. In order to achieve that, I have to implement my own read! function in addition to the base ones.\nTecplot and VTK unstructured data formats have the same connectivity ordering for hexahedron, but different ordering for voxel (in VTK). A function swaprows is implemented to switch the orderings.\nBecause of the embarrassing parallelism nature of postprocessing, it is quite easy to take advantage of parallel approaches to process the data.","category":"page"},{"location":"man/guide/#Issues-1","page":"Guide","title":"Issues","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"At first I forgot to export the Data struct, so everytime when I modified the code and rerun plotdata, it will shout error at me, saying no type was found for the input type.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The current support of animation in Matplotlib is not good enough, especially for interactive plotting and scanning through multiple snapshots. The color range is constantly giving me headaches.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The current wrapper over Matplotlib makes it difficult to modify the plots afterwards, which especially causes problems when dealing with time series snapshots. The colorbar is so hard to fix.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"In the roadmap of PyCall 2.0, there will direct support for accessing Julia objects. I hesitate to do it myself, so let's just wait for it to come.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The support for a long string containing several filenames as inputs has been dropped. It should be substituted by an array of strings.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"Right now the derived quantity plots are not supported. In order to achieve this, I may need:","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"[x] A new function get_var(data, filehead, string) returning the derived variable\n[ ] A new plotting function that understands the derived data type","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The first one is achieved by a trick I found on discourse, which basically identifies symbols as names to members in a struct.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"There is a user recipe in Plots. This is exactly what I am looking for, but more issues are coming up. I have created a new branch for this development.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"I want to do scattered interpolation in Julia directly, but I have not found a simple solution to do this.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"A direct wrapper over PyPlot function is possible, and would be more suitable for passing arguments. This may be a more plausible way to go than relying on recipes.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"When doing processing in batch mode on a cluster, there's usually no need to render the plots on screen. There exists such a backend for this purpose:","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"using PyPlot\nPyPlot.matplotlib.use(\"Agg\")","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"However, notice that currently Agg backend does not support draw_artist. For example, you cannot add an anchored text to your figure.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"Vector naming is messed up if you are using Tecplot VTK reader. For example, \"B [nT]\" â€“> \"B [nT]X\", \"B [nT]Y\", \"B [nT]_Z\". Not a big issue, but annoying.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"There is a unit package in Julia unitful for handling units. Take a look at that one if you really want to solve the unit problems.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"I have encountered a very bad problem of corrupting binary *.vtu files. It turned out that the issue is the starting position of data is wrong because of the way I skip the header AUXDATA part. Sometimes the binary numbers may contain newline character that confuses the reader. It is now fixed.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"[x] Fixed colorbar control through Matplotlib\n[ ] Test suite for checking validity\n[x] Cuts from 3D data visualization besides contour\n[ ] Switch to Makie for 3D plotting and animation\n[ ] PyBase support for manipulating data directly in Python\n[x] Derived variable support\n[ ] General postprocessing script for concatenating and converting files.\n[x] Direct wrapper over matplotlib functions to get seamless API\n[x] Replace np.meshgrid with list comprehension\n[ ] Find a substitution of triangulation in Julia\n[ ] Allow dot syntax to get dictionary contents (Base.convert?)","category":"page"},{"location":"man/examples/#Examples-1","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"IDL format output processing:","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"Read data","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"filename = \"1d_bin.out\";\nfilehead, data, filelist = readdata(filename);\nfilehead, data, filelist = readdata(filename, verbose=true);\nfilehead, data, filelist = readdata(filename, npict=1);\nfilehead, data, filelist = readdata(filename, dir=\".\");","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"A general plotdata function is provided for quick visualizations. In addition to that, some plotting functions can be directly called as shown below, which allows for more control by the user.","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"1D binary","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plotdata(data[1], filehead[1], \"p\", plotmode=\"line\")\nplotdata(data[1], filehead[1], \"p\", plotmode=\"linegrid\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"2D Cartesian (structured)","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plotdata(data[1], filehead[1], \"p bx;by\", plotmode=\"contbar streamover\")\nplotdata(data[1], filehead[1], \"p bx;by\", plotmode=\"contbar quiverover\")\nplotdata(data[1], filehead[1], \"p bx;by\", plotmode=\"contbar streamover\", density=2.0)\nplotdata(data[1], filehead[1], \"p\", plotmode=\"grid\")\nplotdata(data[1], filehead[1], \"p\", plotmode=\"contbar\", plotrange=[-50., 50., -1., 1.])\nplotdata(data[1], filehead[1], \"p\", plotmode=\"contbar\")\nplotdata(data[1], filehead[1], \"p\", plotmode=\"contbarlog\")\nplotdata(data[1], filehead[1], \"p\", plotmode=\"surfbar\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"2D unstructured","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plotdata(data[1], filehead[1], \"rho\", plotmode=\"contbar\")\nplotdata(data[1], filehead[1], \"rho\", plotmode=\"trimesh\")\nplotdata(data[1], filehead[1], \"rho\", plotmode=\"tricont\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"2D structured spherical coordinates","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plotdata(data[1], filehead[1], \"rho\", plotmode=\"contbar\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"3D box","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plotdata(data[1], filehead[1], \"bx\", plotmode=\"contbar\", cut=\"y\", cutPlaneIndex=1, level=20)\nplotdata(data[1], filehead[1], \"bx\", plotmode=\"contbar\", cut=\"y\", plotrange=[-1.4,-1.1,0.70,0.78])\nusing PyPlot\nplt.axis(\"scaled\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"3D structured spherical coordinates","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"filename = \"3d_structured.out\";\nfilehead, data, filelist = readdata(filename, verbose=false);","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"log file","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"logfilename = \"shocktube.log\";\nfilehead, data = readlogdata(logfilename)","category":"page"},{"location":"man/examples/#Multiple-dispatch-for-matplotlib-functions-1","page":"Examples","title":"Multiple dispatch for matplotlib functions","text":"","category":"section"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"line plot","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plot(data[1], filehead[1], \"p\", linewidth=2, color=\"green\")\nc = plot(data[1], filehead[1], \"p\")\nplt.setp(c, linestyle=\"--\", linewidth=2);","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"scatter plot","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"scatter(data[1], filehead[1], \"p\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"contour","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"# 2D contour\ncontour(data[1], filehead[1], \"p\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"filled contour","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"# 2D contourf\ncontourf(data[1], filehead[1], \"p\")\ncontourf(data[1], filehead[1], \"p\", levels, plotrange=[-10,10,-Inf,Inf], plotinterval=0.1)","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"surface plot","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"# surface\nplot_surface(data[1], filehead[1], \"p\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"triangle surface plot","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plot_trisurf(data[1], filehead[1], \"p\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"triangle filled contour plot","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"tricontourf(data[1], filehead[1], \"p\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"streamline","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"streamplot(data[1], filehead[1], \"bx;bz\")\nstreamplot(data[1], filehead[1], \"bx;bz\", density=2.0, color=\"k\", plotinterval=1.0, plotrange=[-10,10,-Inf,Inf])","category":"page"},{"location":"man/examples/#Derived-variables-1","page":"Examples","title":"Derived variables","text":"","category":"section"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"v = get_vars(data[1], filehead[1], [\"Bx\", \"By\", \"Bz\"])\nB = @. sqrt(v.Bx^2 + v.By^2 + v.Bz^2)","category":"page"},{"location":"man/examples/#Output-Format-Conversion-1","page":"Examples","title":"Output Format Conversion","text":"","category":"section"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"ASCII tecplot file:","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"filename = \"3d_ascii.dat\"\nhead, data, connectivity  = readtecdata(filename,false)\nconvertVTK(head, data, connectivity, outname)","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"Binary tecplot file (DOSAVETECBINARY=TRUE):","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"filename = \"3d_bin.dat\"\nhead, data, connectivity  = readtecdata(filename,true)\nconvertVTK(head, data, connectivity, outname)","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"Multiple files:","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"using Glob\nfilenamesIn = \"3d*.dat\"\ndir = \".\"\nfilenames = Vector{String}(undef,0)\nfilesfound = glob(filenamesIn, dir)\nfilenames = vcat(filenames, filesfound)\ntec = readtecdata.(filenames, false) # head, data, connectivity\nfor (i, outname) in enumerate(filenames)\n   convertVTK(tec[i][1], tec[i][2], tec[i][3], outname[1:end-4])\nend","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"If each individual file size is large, consider using:","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"using Glob\nfilenamesIn = \"3d*.dat\"\ndir = \".\"\nfilenames = Vector{String}(undef,0)\nfilesfound = glob(filenamesIn, dir)\nfilenames = vcat(filenames, filesfound)\nfor (i, outname) in enumerate(filenames)\n   head, data, connectivity = readtecdata(filenames, false)\n   convertVTK(head, data, connectivity, outname[1:end-4])\nend","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"Multiple files in parallel:","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"using Distributed\n@everywhere using Pkg\n@everywhere Pkg.activate(\"VisAnaJulia\");\n@everywhere using VisAna, Glob\n\nfilenamesIn = \"cut*.dat\"\ndir = \".\"\nfilenames = Vector{String}(undef,0)\nfilesfound = glob(filenamesIn, dir)\nfilenames = vcat(filenames, filesfound)\n\n@sync @distributed for outname in filenames\n   println(\"filename=$(outname)\")\n   head, data, connectivity = readtecdata(outname, false)\n   convertVTK(head, data, connectivity, outname[1:end-4])\nend","category":"page"},{"location":"#VisAna.jl-Documentation-1","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"","category":"section"},{"location":"#Installation-1","page":"VisAna.jl Documentation","title":"Installation","text":"","category":"section"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"Install VisAna from the julia REPL prompt with","category":"page"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"using Pkg\nPkg.add(PackageSpec(url=\"https://github.com/henry2004y/VisAnaJulia\", rev=\"master\"))","category":"page"},{"location":"#Overview-1","page":"VisAna.jl Documentation","title":"Overview","text":"","category":"section"},{"location":"#Developers-1","page":"VisAna.jl Documentation","title":"Developers","text":"","category":"section"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"VisAna is developed by Hongyang Zhou.","category":"page"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"note: Note\nThis package is still under development, so be careful for any future breaking changes!","category":"page"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"Pages = [\n    \"man/guide.md\",\n    \"man/examples.md\",\n    \"man/syntax.md\",\n]\nDepth = 1","category":"page"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"readdata(filenames,(, dir=\".\", npict=1, verbose=false)))","category":"page"}]
}
