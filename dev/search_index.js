var documenterSearchIndex = {"docs":
[{"location":"man/testparticle/#Test-Particle-Simulation-1","page":"Test Particle Simulation","title":"Test Particle Simulation","text":"","category":"section"},{"location":"man/testparticle/#","page":"Test Particle Simulation","title":"Test Particle Simulation","text":"(Image: ion_trajectory_dipole)","category":"page"},{"location":"man/analysis/#Data-Analysis-in-Space-Physics-1","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"","category":"section"},{"location":"man/analysis/#Diffusion-Region-Detection-1","page":"Data Analysis in Space Physics","title":"Diffusion Region Detection","text":"","category":"section"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"Magnetic reconnection occurs in a small diffusion region around the X-line but its consequences are large scale. There are different approaches to determine whether or not we have encountered the diffusion region. The expected kinetic signatures of diffusion region:","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"enhanced dissipation\nnon-gyrotropic behavior\nelectron distribution functions","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"The first proposed non-gyrotropy measure by Jack Scudder and William Daughton is","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"AØ_e = 2fracP_perp1 - P_perp2P_perp1 + P_perp2","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"which only considers the non-gyrotropy in the plane perpendicular to the magnetic field.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"Another measure of non-gyrotropy D_ng of a specific population proposed by researchers can be think of a ratio between off-diagonal terms and diagonal terms of the pressure tensor:","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"D_ng = frac2sqrtsum_ij ineq jP_ij^2sum_i=13P_ii^2 ","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"Note that this is frame independent and population specific.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"However, Marc Swisdak later demonstrated in his paper that a better measure from positive semi-definite matrix analysis should be","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"Q = fracP_12^2 + P_23^2 + P_31^2P_perp^2 + 2P_perp P_parallel = 1- 4fracI_2(I_1 - P_parallel)(I_1 + 3P_parallel)","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"where I_1=P_xx+P_yy+P_zz is the trace and I_2=P_xxP_yy+P_xxP_zz+P_yyP_zz-(P_xyP_yx+P_xzP_zx+P_yzP_zy) is the principle minor, both of which are invariants under coordinate rotation. (The third invariant is the determinant.) This indeed peak near the center of X-line while is enhanced along the separatrices, which is better than D_ng in the sense that the latter may not peak at the diffusion region.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"It has been found from PIC simulations that especially in asymmetric reconnection, E_M^astneq 0 where mathbfE^ast=mathbfE+mathbfV_etimesmathbfB is not a good enough indicator. Following the principle ideas of finding a measure:","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"dissipation should be related to non-ideal energy conversion;\nscalar indicator;\ninsensitive to the relative motion,","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"a frame independent dissipation measure is constructed,","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"D_e = gamma_ebigmathbfJcdot(mathbfE+mathbfV_etimesmathbfB) - (n_i - n_e)(mathbfV_etimesmathbfE)big","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"which is a Lorentz-invariant scalar representing the energy conversion rate in the frame of electron bulk motion. In the nonrelativistic limit, one can simplify the equation by setting gamma_erightarrow 1. This can be easily confirmed by multiplying mathbfj^prime=qn_imathbfV_i=mathbfj-rho_cmathbfV_e and mathbfE^prime = mathbfE+mathbfVtimesmathbfB.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"This is another good indicator of the electron diffusion region, although it is slightly enhanced along the separatrices as well.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"An alternative and complementary approach is to identify diffusion region candidates by a combination of representative properties. In practice for reconnection with no guide field for instance, the overlapped region of B_L=0 and E_N peak, where some researchers call 'shoulder', is already good enough for the identification.","category":"page"},{"location":"man/analysis/#Spectral-Analysis-1","page":"Data Analysis in Space Physics","title":"Spectral Analysis","text":"","category":"section"},{"location":"man/analysis/#FFT-1","page":"Data Analysis in Space Physics","title":"FFT","text":"","category":"section"},{"location":"man/analysis/#Periodogram-1","page":"Data Analysis in Space Physics","title":"Periodogram","text":"","category":"section"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"This is a group of techniques to determine the periodicity of data. Julia has implementations in the DSP package. Here we introduce the usage by looking at practical examples.","category":"page"},{"location":"man/analysis/#Spectrogram-1","page":"Data Analysis in Space Physics","title":"Spectrogram","text":"","category":"section"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"Spectrogram is used a lot in wave analysis. For my purpose, I use it as an approach to visualize time dependent simulation data along a continuous line region.","category":"page"},{"location":"man/analysis/#Minimum-Variance-Analysis-1","page":"Data Analysis in Space Physics","title":"Minimum Variance Analysis","text":"","category":"section"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"A nice introduction is given by Bengt U.Ö.Sonnerup and Maureen Scheible.  Here is a brief summary of the idea. The implementation of MVA can be found in  MVA.jl.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"The main purpose of minimum or maximum variance analysis (MVA) is to find, from single-spacecraft data, an estimator for the direction normal to a one-dimensional or approximately one-dimensional current layer, wave front, or other transition layer in a plasma.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"For real transition layers observed in space there are usually more or less pronounced deviations from the ideal 1-D model. The layer is likely to have 2-D or 3-D internal structures which evolve in time and to have temporal fluctuations in the orientation of its normal as well.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"The minimum variance technique is designed to deal with the situation where some or all of the non-ideal effects mentioned above, except a systematic temporal change in the normal direction, widehatn, are present. As the estimate of  widehatn, the method identifies that direction in space along which the field-component set {mathbfB^(m)cdotwidehatn} (m = 1 2 3M)  has minimum variance. In other words, widehatn is determined by  minimisation of","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"sigma^2 = frac1M sum_m=1^M (mathbfB^(m) - mathbfB)cdotwidehatn ^2","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"where the average langlemathbfBrangle is defined by","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"langlemathbfBrangle equiv frac1M sum_m=1^M mathbfB^(m)","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"and where the minimisation is subject to the normalisation constraint widehatn=1. Using a Lagrange multiplier lambda to implement this constraint, one then seeks the solution of the set of three homogeneous linear equations","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"fracpartialpartial n_xBig( sigma^2 - lambda (widehatn^2 - 1) Big) = 0 \nfracpartialpartial n_yBig( sigma^2 - lambda (widehatn^2 - 1) Big) = 0 \nfracpartialpartial n_zBig( sigma^2 - lambda (widehatn^2 - 1) Big) = 0","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"where sigma^2 is given by the equation above and widehatn is represented in terms of its three components (n_x n_y n_z) along the cartesian coordinate system X, Y, Z (e.g., GSE or GSM) in which the field data mathbfB^(m)  are given. When the differentiations in equations above have been performed, the resulting set of three equations can be written in matrix form as","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"sum_nu=1^3 M_munu^B n_nu = lambda n_mu","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"where the subscripts munu = 123 denote cartesian components along the X, Y, Z system and","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"M_munu^B equiv langle B_mu B_nurangle - langle B_muranglelangle B_nurangle","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"is the magnetic variance matrix. It is seen from the equation that the allowed lambda values are the eigenvalues lambda_1lambda_2lambda_3 (given here in order of decreasing magnitude) of M_munu^B. Since M_munu^B is symmetric, the eigenvalues are all real and the corresponding eigenvectors, x_1, x_2, and x_3, are orthogonal. The three eigenvectors represent the directions of maximum, intermediate, and minimum variance of the field component along each vector.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"note: Note\nIn practice, the ratio of intermediate to minimum variance should be larger than 5 to give good fit of LMN.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"A not so good example case is the Galileo G8 Ganymede flyby magnetometer data: (Image: ) where the ratio between the intermediate and minimum eigenvalue is only about 2.","category":"page"},{"location":"man/analysis/#ULF-Wave-Detection-1","page":"Data Analysis in Space Physics","title":"ULF Wave Detection","text":"","category":"section"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"ULF waves are MHD waves: Alfvén wave, fast wave and slow wave. One basic approach to identify waves is to check the correlation of quantity perturbations.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"The phase speed of shear Alfvén wave is","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"v_pA = fracomegak = v_A costheta","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"where v_A is the Alfvén speed and theta is the angle between wave vector mathbfk and magnetic field mathbfB.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"The perturbed quantities of Alfvén waves follow these relations:","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"fracdelta mathbfvv_A = pm fracdelta mathbfBB_0 \ndelta rho = 0","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"where delta mathbfv, delta mathbfB, and delta rho are perturbed plasma velocity, magnetic fields, and plasma density, respectively, and B_0 is the background magnetic magnitude.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"For slow and fast waves, the phase speeds are","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"v_ppm^2 = big(fracomegak big) = frac12(v_s^2 + v_A^2) pm frac12Big (v_s^2 + v_A^2)^2 - 4v_s^2 v_A^2 cos^2thetaBig^12","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"The \"+\" is for fast waves and \"−\" for slow waves, and v_S is the sound speed. The perturbed quantities for fast and slow waves are","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"delta rho = fracrho_0v_pfracv_A^2sinthetaB_0 (v_p - v_s^2v_p)delta B\ndelta mathbfv = -fracv_A^2 costhetaB_0 v_pdeltamathbfB + fracv_A^2 sinthetadelta BB_0 (v_p - v_s^2v_p)fracmathbfkk","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"Thus generally the Alfvén wave is identified by the correlations between velocity and magnetic field perturbations, and the fast and slow waves are identified by the negative (for slow waves) or positive (for fast waves) correlations between either density and magnetic field perturbation or thermal pressure and magnetic pressure perturbation.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"For the magnetosonic waves, consider using delta mathbfE and delta mathbfB for identifying speed. The slopes of the curves delta Edelta B correspond to the wave propagation speed in the spacecraft frame.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"Transverse and shear Alfvén wave refer to actually the same thing: the descriptions arise from  mathbfkcdotmathbfV=0 and mathbfVcdotmathbfB_0=0.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"The fast and slow magnetosonic waves are associated with non-zero perturbations in the plasma density and pressure, and also involve plasma motion parallel, as well as perpendicular, to the magnetic field. The latter observation suggests that the dispersion relations omega=kV_pm are likely to undergo significant modification in collisionless plasmas. In order to better understand the nature of the fast and slow waves, let us consider the cold-plasma limit, which is obtained by letting the sound speed V_S tend to zero. In this limit, the slow wave ceases to exist (in fact, its phase velocity tends to zero) whereas the dispersion relation for the fast wave reduces to","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"omega = kV_A","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"This can be identified as the dispersion relation for the compressional-Alfvén wave. Thus, we can identify the fast wave as the compressional-Alfvén wave modified by a non-zero plasma pressure.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"In the limit V_Agg V_S, which is appropriate to low-beta plasmas, the dispersion relation for the slow wave reduces to","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"omega simeq kV_Scostheta","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"This is actually the dispersion relation of a sound wave propagating along magnetic field-lines. Thus, in low-beta plasmas the slow wave is a sound wave modified by the presence of the magnetic field.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"In reality, waves can be mixed together with mode conversions. Also, notice that the classical wave theory is based on spatially homogeneous plasma assumption, which is rarely the case in nature such as the magnetosphere.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"A tricky part in practice is how to get the average through smoothing. Note that a real satellite moves both in time and space. Usually people do moving-box-average to get an average state within a short period.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"A more careful analysis is called Walén test.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"However, always keep in mind that the most reliable way of identifying waves is to calculate the dispersion relation.","category":"page"},{"location":"man/analysis/#Correlation-Test-Between-Two-Variables-1","page":"Data Analysis in Space Physics","title":"Correlation Test Between Two Variables","text":"","category":"section"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"This part takes the reference from R.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"Correlation test is used to evaluate the association between two or more variables.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"info: Info\nIf there is no relationship between the two variables, the average of x should be the same regardless of y and vice versa.","category":"page"},{"location":"man/analysis/#Methods-for-correlation-analyses-1","page":"Data Analysis in Space Physics","title":"Methods for correlation analyses","text":"","category":"section"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"There are different methods to perform correlation analysis:","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"Pearson correlation (r), which measures a linear dependence between two variables (x and y). It’s also known as a parametric correlation test because it depends to the distribution of the data. It can be used only when x and y are from normal distribution. The plot of y = f(x) is named the linear regression curve.\nKendall tau and Spearman rho, which are rank-based correlation coefficients (non-parametric).","category":"page"},{"location":"man/analysis/#Correlation-formula-1","page":"Data Analysis in Space Physics","title":"Correlation formula","text":"","category":"section"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"In the formula below,","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"x and y are two vectors of length n\nbarx and bary corresponds to the means of x and y, respectively.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"Pearson correlation formula","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"r = fracsum (x-barx)(y-barysqrtsum(x-barx)^2sum(y-bary)^2","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"The p-value (significance level) of the correlation can be determined :","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"by using the correlation coefficient table for the degrees of freedom : df=n2, where n is the number of observation in x and y variables.","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"2 or by calculating the t value as follows:","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"t = fracrsqrt1-r^2sqrtn-2","category":"page"},{"location":"man/analysis/#","page":"Data Analysis in Space Physics","title":"Data Analysis in Space Physics","text":"where the corresponding p-value is determined using t table distribution for df=n-2. If the p-value is  5, then the correlation between x and y is significant.","category":"page"},{"location":"man/guide/#Guide-1","page":"Guide","title":"Guide","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"Demos are provided for calling Matlab/Python directly from Julia for debugging and testing. This part will later be separated out for potential Python and Matlab users. Currently the plotting and interpolation needed during plotting are done in Python. For instance, the 3D scatterred interpolation is done via Interpolate in Scipy. Hopefully these additional dependencies will be cut down.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The VTK files does not have timestep information. To allow for further time series processing in Paraview, a script create_pvd.jl is provided for generating the pvd container.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"In principle, I could also try some multi-block (VTM) type for data conversion.","category":"page"},{"location":"man/guide/#Tricks-1","page":"Guide","title":"Tricks","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"This is the first time I use Julia for reading general ascii/binary files. It was a pain at first due to the lack of examples and documents using any basic function like read/read!, but fortunately I figured them out myself. One trick in reading binary array data is the usage of view, or subarrays, in Julia. In order to achieve that, I have to implement my own read! function in addition to the base ones.\nTecplot and VTK unstructured data formats have the same connectivity ordering for hexahedron, but different ordering for voxel (in VTK). A function swaprows is implemented to switch the orderings.\nBecause of the embarrassing parallelism nature of postprocessing, it is quite easy to take advantage of parallel approaches to process the data.\nThe built-in streamline function of Matplotlib is not proper for scientifically visualizing field information. The solution is to trace field lines with ODEs and plot the line series, similar to what has been done by Spacepy.","category":"page"},{"location":"man/guide/#Streamline-Tracing-1","page":"Guide","title":"Streamline Tracing","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"2D streamline tracing is almost finished. 3D streamline tracing is on the way. I need an adaptive step control integration scheme like rk45.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"In the future, the stream tracing should become a stand-alone package!","category":"page"},{"location":"man/guide/#Particle-Tracing-1","page":"Guide","title":"Particle Tracing","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"I have a plan of incorporating particle tracing into this module. WIP","category":"page"},{"location":"man/guide/#Support-for-more-complicated-grid-structures-1","page":"Guide","title":"Support for more complicated grid structures","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"For the plotting, streamline tracing and particle tracing, a common problem is the grid and related interpolation process. I am envisioning a more general approach to deal with block-based and unstructured grid to provide fundamental support for all of these.","category":"page"},{"location":"man/guide/#Animation-1","page":"Guide","title":"Animation","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"This is a big headache for me right now.","category":"page"},{"location":"man/guide/#-1","page":"Guide","title":"","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"A real open-source project is a collaborated work not only from a bunch of people, but also a group of languages. In Julia, this can be achieved with the help of the Package manager.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"I want to have some C dependencies in my code instead of rewriting everything in Julia. This would serve as an attempt to quickly make things work.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"Right now this seems to be a little bit difficult for me. I need to learn from experts. The tracing scheme in C is rewritten in Julia so I don't need to bother for now. Checkout BinaryBuilder for more information. A nice example is given in this C package.","category":"page"},{"location":"man/guide/#Interoperability-with-Python-1","page":"Guide","title":"Interoperability with Python","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"In the current version of PyCall and PyJulia, there is already direct support for accessing Julia struct objects (noted as jlwrap).","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"As to avoid the cross-dependency hail on PyPlot, I split the original package into pure IO SWMF and post-processing and plotting. This is also a nicer way of organizing larger code base.","category":"page"},{"location":"man/guide/#Issues-1","page":"Guide","title":"Issues","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"Before v0.5.1, readdata function in Matlab for large data is 2 times faster than that in Julia. The reason is simply using read or unsafe_read in the lower level. The latter one is much faster. After the fix, Julia version performs 5 times faster than the Matlab version in reading binary data.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"At first I forgot to export the Data struct, so everytime when I modified the code and rerun plotdata, it will shout error at me, saying no type was found for the input type.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"Precise control of colorbar position in Matplotlib is not an easy task. axis(“scaled”) or axis(“equal”) will cause issue with the present layout, such as overlapping, cutoff, or too much white spaces. Things are improving, but it takes time. See the scripts in the space folder for some examples of controlling the layouts.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The current support of animation in Matplotlib is not good enough, especially for interactive plotting and scanning through multiple snapshots. The color range is constantly giving me headaches.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The current wrapper over Matplotlib makes it difficult to modify the plots afterwards, which especially causes problems when dealing with time series snapshots. The colorbar is so hard to fix. The solution is, instead of using level, provide a range of points.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The support for a long string containing several filenames as inputs has been dropped. It should be substituted by an array of strings.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"Right now the derived quantity plots are not supported. In order to achieve this, I may need:","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"[x] A new function get_var(data, filehead, string) returning the derived variable\n[ ] A new plotting function that understands the derived data type","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The first one is achieved by a trick I found on discourse, which basically identifies symbols as names to members in a struct.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"There is a user recipe in Plots. This is exactly what I am looking for, but more issues are coming up. I have created a new branch for this development.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"I want to do scattered interpolation in Julia directly, but I have not found a simple solution to do this.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"A direct wrapper over PyPlot function is possible, and would be more suitable for passing arguments. This may be a more plausible way to go than relying on recipes.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"When doing processing in batch mode on a cluster, there's usually no need to render the plots on screen. There exists such a backend for this purpose:","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"using PyPlot\nPyPlot.matplotlib.use(\"Agg\")","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"However, notice that currently Agg backend does not support draw_artist. For example, you cannot add an anchored text to your figure.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"Vector naming is messed up if you are using Tecplot VTK reader. For example, \"B [nT]\" –> \"B [nT]X\", \"B [nT]Y\", \"B [nT]_Z\". Not a big issue, but annoying.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"There is a unit package in Julia unitful for handling units. Take a look at that one if you really want to solve the unit problems.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"I have encountered a very bad problem of corrupting binary *.vtu files. It turned out that the issue is the starting position of data is wrong because of the way I skip the header AUXDATA part. Sometimes the binary numbers may contain newline character that confuses the reader. It is now fixed. Later on the reading of the header part is completely rewritten to provide better support for a variety of Tecplot Ascii headers.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"I have already made a lot of mistakes by mixing the row-major and column-major codes. Explicitly list all the parts that require extra care!","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"As for the GUI development, GTK seems to be an ideal candidate.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"[x] Fixed colorbar control through Matplotlib\n[x] Test suite for checking validity\n[ ] Full coverage of tests\n[x] Cuts from 3D data visualization besides contour\n[ ] Switch to Makie for 3D plotting and animation\n[ ] PyJulia support for manipulating data directly in Python\n[x] Field tracer 2D in Julia\n[x] Derived variable support\n[x] General postprocessing script for concatenating and converting files.\n[x] Direct wrapper over matplotlib functions to get seamless API\n[x] Replace np.meshgrid with list comprehension\n[ ] Find a substitution of triangulation in Julia\n[ ] Allow dot syntax to get dictionary contents (Base.convert?)\n[ ] Binary library support\n[ ] Macros for quickly looking at data (GUI is the ideal solution!)\n[x] Magnetic field line plots from simulation\n[x] Particle phase space distribution plots\n[ ] Animation","category":"page"},{"location":"man/examples/#Examples-1","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"man/examples/#IDL-format-output-processing-1","page":"Examples","title":"IDL format output processing","text":"","category":"section"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"The data loader examples are in SWMF.jl. You can use all the functions in SWMF.jl by, e.g., VisAna.readdata, or you can just import the SWMF.jl package.","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"A general plotdata function is provided for quick visualizations. In addition to that, some plotting functions can be directly called as shown below, which allows for more control by the user.","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"1D binary","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plotdata(data, \"p\", plotmode=\"line\")\nplotdata(data, \"p\", plotmode=\"linegrid\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"2D Cartesian (structured)","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plotdata(data, \"p bx;by\", plotmode=\"contbar streamover\")\nplotdata(data, \"p bx;by\", plotmode=\"contbar quiverover\")\nplotdata(data, \"p bx;by\", plotmode=\"contbar streamover\", density=2.0)\nplotdata(data, \"p\", plotmode=\"grid\")\nplotdata(data, \"p\", plotmode=\"contbar\", plotrange=[-50., 50., -1., 1.])\nplotdata(data, \"p\", plotmode=\"contbar\")\nplotdata(data, \"p\", plotmode=\"contbarlog\")\nplotdata(data, \"p\", plotmode=\"surfbar\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"2D unstructured","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plotdata(data, \"rho\", plotmode=\"contbar\")\nplotdata(data, \"rho\", plotmode=\"trimesh\")\nplotdata(data, \"rho\", plotmode=\"tricont\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"2D structured spherical coordinates","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plotdata(data, \"rho\", plotmode=\"contbar\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"3D box","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plotdata(data, \"bx\", plotmode=\"contbar\", cut=\"y\", cutPlaneIndex=1, level=20)\nplotdata(data, \"bx\", plotmode=\"contbar\", cut=\"y\", plotrange=[-1.4,-1.1,0.70,0.78])\nusing PyPlot\nplt.axis(\"scaled\")\n\nsubplot(2,2,(1,3))\ncutplot(data, \"Ex\", cut='y', cutPlaneIndex=128, plotrange=plotrange)","category":"page"},{"location":"man/examples/#Multiple-dispatch-for-matplotlib-functions-1","page":"Examples","title":"Multiple dispatch for matplotlib functions","text":"","category":"section"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"line plot","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plot(data, \"p\", linewidth=2, color=\"green\")\nc = plot(data, \"p\")\nplt.setp(c, linestyle=\"--\", linewidth=2);","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"scatter plot","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"scatter(data, \"p\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"contour","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"# 2D contour\ncontour(data, \"p\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"filled contour","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"contourf(data, \"p\")\ncontourf(data, \"p\", levels, plotrange=[-10,10,-Inf,Inf], plotinterval=0.1)","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"surface plot","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plot_surface(data, \"p\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"triangle surface plot","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"plot_trisurf(data, \"p\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"triangle filled contour plot","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"tricontourf(data, \"p\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"streamline","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"streamplot(data, \"bx;bz\")\nstreamplot(data, \"bx;bz\", density=2.0, color=\"k\", plotinterval=1.0, plotrange=[-10,10,-Inf,Inf])","category":"page"},{"location":"man/examples/#Streamline-tracing-1","page":"Examples","title":"Streamline tracing","text":"","category":"section"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"The built-in streamplot function in Matplotlib is not satisfactory for accurately tracing streamlines. Instead in VisAna we have native support field tracer.","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"dipole.jl is used for analytically generate a dipole field:","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"test_dipole()","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"which will show the following figure","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"(Image: )","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"Tracing along an asymptotic line","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"test_trace_asymptote()","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"in turn gives (Image: )","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"Tracing lines in a dipole field","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"test_trace_dipole()","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"in turn gives (Image: )","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"Currently the tracing only works on a uniform structured grid.","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"An example of tracing in a 2D cut and plot the field lines over contour:","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"using VisAna, PyPlot\n\nfilename = \"y=0_var_1_t00000000_n00000000.out\"\ndata = VisAna.readdata(filename,dir=\"test\")\n\nbx = data.w[:,:,5]\nbz = data.w[:,:,7]\nx  = data.x[:,1,1]\nz  = data.x[1,:,2]\n\nseeds = select_seeds(x,z; nSeed=100) # randomly select the seeding points\n\nfor i = 1:size(seeds)[2]\n   xs = seeds[1,i]\n   zs = seeds[2,i]\n   # Tracing in both direction. Check the document for more options.\n   x1, z1 = trace2d_eul(bx, bz, xs, zs, x, z, ds=0.1, maxstep=1000, gridType=\"ndgrid\")\n   plot(x1,z1,\"--\")\nend\naxis(\"equal\")","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"which will display (Image: SWMF_test1_noAMR)","category":"page"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"Currently the select_seeds function uses pseudo random number generator that produces the same seeds every time.","category":"page"},{"location":"man/examples/#Space-data-analysis-1","page":"Examples","title":"Space data analysis","text":"","category":"section"},{"location":"man/examples/#","page":"Examples","title":"Examples","text":"In the space folder, you can find scripts for comparing magnetic field with observations, cross polar cap potential analysis, diamagnetic current calculation, 1D data frequency analysis, minimum variance analysis, particle phase space distribution plots, cut plots near the X-line reconnection site, and static satellite analysis.","category":"page"},{"location":"#VisAna.jl-Documentation-1","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"","category":"section"},{"location":"#Overview-1","page":"VisAna.jl Documentation","title":"Overview","text":"","category":"section"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"note: Note\nThis package is still under development, so be careful for any future breaking changes!","category":"page"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"SWMF data reading, converting, visualizing and analyzing using Julia.","category":"page"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"This package is inherited from its predecessor in IDL (developed by G.Tóth) and Matlab (developed by H.Zhou). Currently instead of a real \"package\", this is more like a collection of scripts. The data loader is split into an stand-alone package SWMF.","category":"page"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"This package provides the following functionalities:","category":"page"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"simulation data reader\nsimulation data visualization\ndata format conversion\nprogramming language interoperability\ndata analysis in space physics\ntest particle tracing (WIP)","category":"page"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"The data analysis part includes spectral analysis, minimum variance analysis and many functions for aiding the interpretation of data.","category":"page"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"The ultimate goal is to build a convenient tool of reading and analyzing simulation outputs which is easy to install, easy to use, and fast.","category":"page"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"tip: Ready to use?\nFeel free to contact the author for any help or collaboration!","category":"page"},{"location":"#Installation-1","page":"VisAna.jl Documentation","title":"Installation","text":"","category":"section"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"Install VisAna from the julia REPL prompt with","category":"page"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"using Pkg\nPkg.add(PackageSpec(url=\"https://github.com/henry2004y/VisAnaJulia\", rev=\"master\"))","category":"page"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"Pages = [\n    \"man/guide.md\",\n    \"man/examples.md\",\n    \"man/functions.md\",\n    \"man/types.md\",\n    \"man/analysis.md\"\n    \"man/testparticle.md\"\n]\nDepth = 1","category":"page"},{"location":"#Benchmark-1","page":"VisAna.jl Documentation","title":"Benchmark","text":"","category":"section"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"VisAna has by far the fastest data loading speed among IDL, MATLAB, and Julia. It has almost the same performance as spacepy. Check the table for details.","category":"page"},{"location":"#Developers-1","page":"VisAna.jl Documentation","title":"Developers","text":"","category":"section"},{"location":"#","page":"VisAna.jl Documentation","title":"VisAna.jl Documentation","text":"VisAna is developed by Hongyang Zhou.","category":"page"},{"location":"man/types/#Private-types-1","page":"Private types","title":"Private types","text":"","category":"section"},{"location":"man/types/#Private-types-in-module-VisAna:-1","page":"Private types","title":"Private types in module VisAna:","text":"","category":"section"},{"location":"man/types/#","page":"Private types","title":"Private types","text":"Modules = [VisAna]\nPublic = false\nOrder = [:type]","category":"page"},{"location":"man/functions/#Functions-1","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"man/functions/#Functions-exported-from-VisAna:-1","page":"Functions","title":"Functions exported from VisAna:","text":"","category":"section"},{"location":"man/functions/#","page":"Functions","title":"Functions","text":"Modules = [VisAna]\nPrivate = false\nOrder = [:function]","category":"page"},{"location":"man/functions/#PyPlot.contour","page":"Functions","title":"PyPlot.contour","text":"contour(data,var, levels=0; plotrange, plotinterval, kwargs)\n\nWrapper over the contour function in matplotlib.\n\n\n\n\n\n","category":"function"},{"location":"man/functions/#PyPlot.contourf","page":"Functions","title":"PyPlot.contourf","text":"contourf(data var, levels=0; plotrange, plotinterval, kwargs)\n\nWrapper over the contourf function in matplotlib.\n\n\n\n\n\n","category":"function"},{"location":"man/functions/#PyPlot.plot-Tuple{SWMF.Data,AbstractString}","page":"Functions","title":"PyPlot.plot","text":"plot(data, var; kwargs)\n\nWrapper over the plot function in matplotlib.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#PyPlot.plot_surface-Tuple{SWMF.Data,AbstractString}","page":"Functions","title":"PyPlot.plot_surface","text":"plot_surface(data, var; plotrange, plotinterval, kwargs)\n\nWrapper over the plot_surface function in matplotlib.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#PyPlot.plot_trisurf-Tuple{SWMF.Data,AbstractString}","page":"Functions","title":"PyPlot.plot_trisurf","text":"plot_trisurf(data::Data, var::String;\n\tplotrange::Vector{Float64}=[-Inf,Inf,-Inf,Inf], kwargs::Dict=Dict())\n\nWrapper over the plot_trisurf function in matplotlib.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#PyPlot.scatter-Tuple{SWMF.Data,AbstractString}","page":"Functions","title":"PyPlot.scatter","text":"scatter(data, var; kwargs)\n\nWrapper over the scatter function in matplotlib.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#PyPlot.streamplot-Tuple{SWMF.Data,AbstractString}","page":"Functions","title":"PyPlot.streamplot","text":"streamplot(data, var; plotrange, plotinterval=0.1, density=1.0, color=\"\")\n\nWrapper over the streamplot function in matplotlib. Streamplot does not have **kwargs in the API.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#PyPlot.tricontourf-Tuple{SWMF.Data,AbstractString}","page":"Functions","title":"PyPlot.tricontourf","text":"tricontourf(data, var; plotrange, plotinterval, kwargs)\n\nWrapper over the tricontourf function in matplotlib.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#VisAna.animatedata-Tuple{}","page":"Functions","title":"VisAna.animatedata","text":"animatedata()\n\nGenerate animations from data. This is basically calling plotdata function for multiple snapshots. The main issue here is to determine the colorbar/axis range in advance to avoid any jump in the movie.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#VisAna.cutplot-Tuple{SWMF.Data,AbstractString}","page":"Functions","title":"VisAna.cutplot","text":"cutplot(data, var; plotrange=[-Inf,Inf,-Inf,Inf], cut=' ',\n\tplotinterval=0.1, density=1.0, cutPlaneIndex=1,level=20)\n\n2D plane cut contourf of 3D box data.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#VisAna.plotdata-Tuple{SWMF.Data,AbstractString}","page":"Functions","title":"VisAna.plotdata","text":"plotdata(data, func, (...))\n\nPlot the variable from SWMF output.\n\nplotdata(data, \"p\", plotmode=\"contbar\")\n\nplotdata(data, \"p\", plotmode=\"grid\")\n\nplotdata(data, func, plotmode=\"trimesh\",plotrange=plotrange, plotinterval=0.2)\n\nInput arguments\n\ndata::Data: output data.\nfunc::String: variables for plotting.\nplotmode::String: (optional) type of plotting [\"cont\",\"contbar\"]...\nplotrange::Vector: (optional) range of plotting.\nplotinterval: (optional) interval for interpolation.\nlevel: (optional) level of contour.\ndensity: (optional) density for streamlines.\ncut: (optional) select 2D cut plane from 3D outputs [\"x\",\"y\",\"z\"].\ncutPlaneIndex: (optional)\nmultifigure: (optional) 1 for multifigure display, 0 for subplots.\nverbose: (optional) display additional information.\n\nRight now this can only deal with 2D plots or 3D cuts. Full 3D plots may be supported in the future.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#VisAna.plotlogdata-Tuple{SWMF.Data,AbstractString}","page":"Functions","title":"VisAna.plotlogdata","text":"plotlogdata(data, head, vars, (plotmode=\"line\", plotrange=[-Inf,Inf]))\n\nPlot information from log file.\n\nInput arguments\n\ndata::Data: output data.\nvars::String: variables for plotting.\nplotmode::String: (optional) type of plotting [\"line\",\"scatter\"].\nplotrange::Vector: (optional) range of plotting.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#VisAna.select_seeds-Tuple{Any,Any}","page":"Functions","title":"VisAna.select_seeds","text":"select_seeds(x, y, nSeed=100)\n\nGenerate nSeed seeding points randomly in the grid range. If you specify nSeed, use the keyword input, otherwise it will be overloaded by the 3D version seed generation.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#VisAna.streamslice-Tuple{SWMF.Data,AbstractString}","page":"Functions","title":"VisAna.streamslice","text":"streamslice(data::Data, var::String;\n  plotrange=[-Inf,Inf,-Inf,Inf], cut=' ',\n  plotinterval=0.1, density=1.0, cutPlaneIndex=1,color=\"w\")\n\nPlot streamlines on 2D slices of 3D box data. Variable string must be separated with ;. Tranposes aree needed because of meshgrid and ndgrid conversion.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#VisAna.test_dipole-Tuple{}","page":"Functions","title":"VisAna.test_dipole","text":"A quick test of the dipole field functions.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#VisAna.test_trace_asymptote","page":"Functions","title":"VisAna.test_trace_asymptote","text":"testtraceasymptote(IsSingle)\n\nTest streamline tracing by plotting vectors and associated streamlines through a simple velocity field where Vx=x, Vy=-y. Support test for single and double precision.\n\n\n\n\n\n","category":"function"},{"location":"man/functions/#VisAna.test_trace_dipole-Tuple{}","page":"Functions","title":"VisAna.test_trace_dipole","text":"Trace field lines through a dipole field.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#VisAna.trace2d_eul-NTuple{6,Any}","page":"Functions","title":"VisAna.trace2d_eul","text":"trace2d_eul(fieldx, fieldy, xstart, ystart, gridx, gridy;\n\tmaxstep=20000, ds=0.01, gridType=\"meshgrid\", direction=\"both\")\n\nGiven a 2D vector field, trace a streamline from a given point to the edge of the vector field. The field is integrated using Euler's method. While this is faster than rk4, it is less accurate. Only valid for regular grid with coordinates gridx, gridy. If gridx and gridy are not given, assume that xstart and ystart are normalized coordinates (e.g. position in terms of array indices.)??? The field can be in both meshgrid (default) or ndgrid format. Supporting direction for {\"both\",\"forward\",\"backward\"}.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#VisAna.trace2d_rk4-NTuple{6,Any}","page":"Functions","title":"VisAna.trace2d_rk4","text":"trace2d_rk4(fieldx, fieldy, xstart, ystart, gridx, gridy;\n\tmaxstep=20000, ds=0.01, gridType=\"meshgrid\", direction=\"both\")\n\nGiven a 2D vector field, trace a streamline from a given point to the edge of the vector field. The field is integrated using Runge Kutta 4. Slower than Euler, but more accurate. The higher accuracy allows for larger step sizes ds.  Only valid for regular grid with coordinates gridx, gridy. If gridx and gridy are not given, assume that xstart and ystart are normalized coordinates (e.g., position in terms of array indices.???) The field can be in both meshgrid (default) or ndgrid format. Supporting direction for {\"both\",\"forward\",\"backward\"}.\n\n\n\n\n\n","category":"method"},{"location":"man/functions/#VisAna.trace3d_eul-NTuple{9,Any}","page":"Functions","title":"VisAna.trace3d_eul","text":"trace3d_eul(fieldx, fieldy, fieldz, xstart, ystart, zstart, gridx, gridy,\n  gridz; maxstep=20000, ds=0.01)\n\nGiven a 3D vector field, trace a streamline from a given point to the edge of the vector field. The field is integrated using Euler's method. Only valid for regular grid with coordinates gridx, gridy, gridz. The field can be in both meshgrid (default) or ndgrid format.\n\n\n\n\n\n","category":"method"}]
}
